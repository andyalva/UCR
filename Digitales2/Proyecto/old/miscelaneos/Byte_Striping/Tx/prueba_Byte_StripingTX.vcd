$date
	Sat May 26 18:17:30 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tbbs $end
$var wire 1 ! valid $end
$var wire 1 " reset $end
$var wire 8 # data_out3 [7:0] $end
$var wire 8 $ data_out2 [7:0] $end
$var wire 8 % data_out1 [7:0] $end
$var wire 8 & data_out0 [7:0] $end
$var wire 8 ' data [7:0] $end
$var wire 1 ( clk $end
$scope module bancopruebasBS $end
$var wire 8 ) data_out3 [7:0] $end
$var wire 8 * data_out2 [7:0] $end
$var wire 8 + data_out1 [7:0] $end
$var wire 8 , data_out0 [7:0] $end
$var reg 1 ( clk $end
$var reg 8 - data [7:0] $end
$var reg 1 " reset $end
$var reg 1 ! valid $end
$upscope $end
$scope module bytestrip $end
$var wire 1 ( clk $end
$var wire 8 . data [7:0] $end
$var wire 1 " reset $end
$var wire 1 ! valid $end
$var reg 8 / data_out0 [7:0] $end
$var reg 8 0 data_out0_next [7:0] $end
$var reg 8 1 data_out1 [7:0] $end
$var reg 8 2 data_out1_next [7:0] $end
$var reg 8 3 data_out2 [7:0] $end
$var reg 8 4 data_out2_next [7:0] $end
$var reg 8 5 data_out3 [7:0] $end
$var reg 8 6 data_out3_next [7:0] $end
$var reg 4 7 next_state [3:0] $end
$var reg 4 8 state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
b0 &
b0 %
b0 $
b0 #
1"
0!
$end
#5
1(
#10
0(
#15
0"
1(
#20
0(
#25
b1 0
b1 7
b1 '
b1 -
b1 .
1!
1(
#30
0(
#35
b10 0
b10 7
b10 '
b10 -
b10 .
b1 &
b1 ,
b1 /
b1 8
1(
#40
0(
#45
b11 2
b11 7
b11 '
b11 -
b11 .
b10 &
b10 ,
b10 /
b10 8
1(
#50
0(
#55
b100 4
b100 7
b100 '
b100 -
b100 .
b11 %
b11 +
b11 1
b11 8
1(
#60
0(
#65
b101 6
b1 7
b101 '
b101 -
b101 .
b100 $
b100 *
b100 3
b100 8
1(
#70
0(
#75
b110 0
b10 7
b110 '
b110 -
b110 .
b101 #
b101 )
b101 5
b1 8
1(
#80
0(
#85
b111 2
b11 7
b111 '
b111 -
b111 .
b110 &
b110 ,
b110 /
b10 8
1(
#90
0(
#95
b1000 4
b100 7
b1000 '
b1000 -
b1000 .
b111 %
b111 +
b111 1
b11 8
1(
#100
0(
#105
b1001 6
b1 7
b1001 '
b1001 -
b1001 .
b1000 $
b1000 *
b1000 3
b100 8
1(
#110
0(
#115
b10000 0
b10 7
b10000 '
b10000 -
b10000 .
b1001 #
b1001 )
b1001 5
b1 8
1(
#120
0(
#125
b10001 2
b11 7
b10001 '
b10001 -
b10001 .
b10000 &
b10000 ,
b10000 /
b10 8
1(
#130
0(
#135
b10010 4
b100 7
b10010 '
b10010 -
b10010 .
b10001 %
b10001 +
b10001 1
b11 8
1(
#140
0(
#145
b10010 6
b1 7
b10010 $
b10010 *
b10010 3
b100 8
1(
#150
0(
#155
b10010 0
b10 7
b10010 #
b10010 )
b10010 5
b1 8
1(
#160
0(
#165
b10010 2
b11 7
b10010 &
b10010 ,
b10010 /
b10 8
1(
#170
0(
#175
b100 7
b10010 %
b10010 +
b10010 1
b11 8
1(
#180
0(
#185
b1 7
b100 8
1(
#190
0(
#195
b10 7
b1 8
1(
#200
0(
#205
b11 7
b10 8
1(
#210
0(
#215
b100 7
b11 8
1(
#220
0(
#225
b1 7
b100 8
1(
#230
0(
#235
b10 7
b1 8
1(
#240
0(
#245
b11 7
b10 8
1(
#250
0(
#255
b100 7
b11 8
1(
#260
0(
#265
b1 7
b100 8
1(
#270
0(
#275
b10 7
b1 8
1(
#280
0(
#285
b11 7
b10 8
1(
#290
0(
#295
b100 7
b11 8
1(
#300
0(
#305
b1 7
b100 8
1(
#310
0(
#315
b10 7
b1 8
1(
#320
0(
#325
b11 7
b10 8
1(
#330
0(
#335
b100 7
b11 8
1(
#340
0(
#345
b1 7
b100 8
1(
#350
0(
#355
b10 7
b1 8
1(
#360
0(
#365
b11 7
b10 8
1(
#370
0(
#375
b100 7
b11 8
1(
#380
0(
#385
b1 7
b100 8
1(
#390
0(
#395
b10 7
b1 8
1(
#400
0(
#405
b11 7
b10 8
1(
#410
0(
#415
b100 7
b11 8
1(
#420
0(
#425
b1 7
b100 8
1(
#430
0(
#435
b10 7
b1 8
1(
#440
0(
#445
b11 7
b10 8
1(
#450
0(
#455
b100 7
b11 8
1(
#460
0(
#465
b1 7
b100 8
1(
#470
0(
#475
b10 7
b1 8
1(
#480
0(
#485
b11 7
b10 8
1(
#490
0(
#495
b100 7
b11 8
1(
#500
0(
#505
b1 7
b100 8
1(
#510
0(
#515
b10 7
b1 8
1(
#520
0(
#525
b11 7
b10 8
1(
#530
0(
#535
b100 7
b11 8
1(
#540
0(
#545
b1 7
b100 8
1(
#550
0(
#555
b10 7
b1 8
1(
#560
0(
#565
b11 7
b10 8
1(
#570
0(
#575
b100 7
b11 8
1(
#580
0(
#585
b1 7
b100 8
1(
#590
0(
#595
b10 7
b1 8
1(
#600
0(
